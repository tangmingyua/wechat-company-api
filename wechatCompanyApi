const settings = require('../settings-' + (process.env.profile || 'dev') + '.json');
const request = require('request');
const RedisHelper = require('../lib/RedisHelper');
const bent = require('bent');
const getJSON = bent('json');
const post = bent('POST', 'json', 200);
let wechat_redis_helper = new RedisHelper(
    settings['wechat_redis_db']['host'],
    settings['wechat_redis_db']['port'],
    settings['wechat_redis_db']['db']);

exports.wechatCompanyOauth = class  {
    constructor(appid,secret,agentid){
        this.appid = appid;
        this.secret = secret;
        this.agentid = agentid;
    }

    getAuthorizeURLForWebsite(){
        let self = this;
        return `https://open.weixin.qq.com/connect/oauth2/authorize?appid=${self['appid']}&redirect_uri=http%3A%2F%2F248x73d504.zicp.vip%2Fout-support%2Fpage&response_type=code&scope=snsapi_base&agentid=${self['agentid']}#wechat_redirect`;
    }

    async getAccessToken(){
        let self = this;
        return new Promise((resolve, reject) => {
            let key = 'company_wechat_access_token';
            wechat_redis_helper.get(key,(err,val)=>{//先通过redis 获取
                if(!err && val){
                    resolve(val);
                } else {
                    request.get(`https://qyapi.weixin.qq.com/cgi-bin/gettoken?corpid=${self['appid']}&corpsecret=${self['secret']}`,(err,res,body)=>{
                        body = JSON.parse(body);
                        if(!err && body && body['errcode']==0){
                            wechat_redis_helper.setex(key,7000,body['access_token'],_=>{//在redis中保存7000s
                                resolve(body['access_token']);
                            })
                        } else {
                            reject('获取access_token失败');
                        }
                    })
                }
            })
        })
    }

    /**
     * 获取userid
     * @param ctx
     * @param code
     * @returns {Promise<*>}
     */
    async getUserId(ctx,code){
        if(ctx && ctx.cookies.get['yov_user_id']){
            return ctx.cookies.get['yov_user_id'];
        } else {
            let access_token = await this.getAccessToken();
            let body = await getJSON(`https://qyapi.weixin.qq.com/cgi-bin/user/getuserinfo?access_token=${access_token}&code=${code}`);
            if(body && body['errcode']==0){
                ctx.cookies.set('yov_user_id',body['UserId']);
                return body['UserId'];
            } else {
                throw '获取user_id失败';
            }
        }
    }

    async getOpenId(ctx,user_id){
        let access_token = await this.getAccessToken();
        let body = await post(`https://qyapi.weixin.qq.com/cgi-bin/user/convert_to_openid?access_token=${access_token}`,{
            "userid": user_id,
            "agentid": this.agentid
        })
        if(body && body['errcode']==0){
            ctx.cookies.set('yov_open_id',body['openid']);
            return body['openid'];
        } else {
            throw '获取user_id失败';
        }
    }
}
